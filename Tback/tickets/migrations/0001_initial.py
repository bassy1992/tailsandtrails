# Generated by Django 5.2.4 on 2025-08-21 09:57

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='TicketCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(blank=True, max_length=100, unique=True)),
                ('category_type', models.CharField(choices=[('event', 'Event'), ('transport', 'Transport'), ('attraction', 'Attraction'), ('experience', 'Experience'), ('accommodation', 'Accommodation')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('icon', models.CharField(blank=True, help_text='Lucide icon name', max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Ticket Categories',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Venue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, max_length=200, unique=True)),
                ('address', models.TextField()),
                ('city', models.CharField(max_length=100)),
                ('region', models.CharField(max_length=100)),
                ('country', models.CharField(default='Ghana', max_length=100)),
                ('latitude', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True)),
                ('capacity', models.PositiveIntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True)),
                ('image', models.URLField(blank=True, max_length=500)),
                ('contact_phone', models.CharField(blank=True, max_length=20)),
                ('contact_email', models.EmailField(blank=True, max_length=254)),
                ('website', models.URLField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, max_length=200, unique=True)),
                ('ticket_type', models.CharField(choices=[('single', 'Single Entry'), ('multiple', 'Multiple Entry'), ('season', 'Season Pass'), ('group', 'Group Ticket'), ('vip', 'VIP Access')], default='single', max_length=20)),
                ('description', models.TextField()),
                ('short_description', models.CharField(blank=True, max_length=300)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('currency', models.CharField(default='GHS', max_length=3)),
                ('discount_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('total_quantity', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('available_quantity', models.PositiveIntegerField()),
                ('min_purchase', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('max_purchase', models.PositiveIntegerField(default=10, validators=[django.core.validators.MinValueValidator(1)])),
                ('event_date', models.DateTimeField()),
                ('event_end_date', models.DateTimeField(blank=True, null=True)),
                ('sale_start_date', models.DateTimeField()),
                ('sale_end_date', models.DateTimeField()),
                ('image', models.URLField(blank=True, max_length=500)),
                ('gallery_images', models.JSONField(blank=True, default=list)),
                ('features', models.JSONField(blank=True, default=list, help_text='List of ticket features')),
                ('terms_conditions', models.TextField(blank=True)),
                ('cancellation_policy', models.TextField(blank=True)),
                ('meta_title', models.CharField(blank=True, max_length=200)),
                ('meta_description', models.CharField(blank=True, max_length=300)),
                ('tags', models.JSONField(blank=True, default=list)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('sold_out', 'Sold Out'), ('cancelled', 'Cancelled'), ('expired', 'Expired')], default='draft', max_length=20)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_refundable', models.BooleanField(default=True)),
                ('requires_approval', models.BooleanField(default=False)),
                ('views_count', models.PositiveIntegerField(default=0)),
                ('sales_count', models.PositiveIntegerField(default=0)),
                ('rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('reviews_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tickets', to='tickets.ticketcategory')),
                ('venue', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tickets', to='tickets.venue')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TicketPromoCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('discount_type', models.CharField(choices=[('percentage', 'Percentage'), ('fixed', 'Fixed Amount')], max_length=20)),
                ('discount_value', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('max_discount_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('usage_limit', models.PositiveIntegerField(blank=True, help_text='Total number of times this code can be used', null=True)),
                ('usage_limit_per_user', models.PositiveIntegerField(default=1, help_text='Number of times a single user can use this code')),
                ('used_count', models.PositiveIntegerField(default=0)),
                ('valid_from', models.DateTimeField()),
                ('valid_until', models.DateTimeField()),
                ('minimum_purchase_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('minimum_quantity', models.PositiveIntegerField(default=1)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('applicable_categories', models.ManyToManyField(blank=True, related_name='promo_codes', to='tickets.ticketcategory')),
                ('applicable_tickets', models.ManyToManyField(blank=True, related_name='promo_codes', to='tickets.ticket')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TicketPurchase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purchase_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('quantity', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('discount_applied', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('customer_name', models.CharField(max_length=200)),
                ('customer_email', models.EmailField(max_length=254)),
                ('customer_phone', models.CharField(blank=True, max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded'), ('used', 'Used')], default='pending', max_length=20)),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('payment_method', models.CharField(blank=True, max_length=50)),
                ('payment_reference', models.CharField(blank=True, max_length=100)),
                ('payment_date', models.DateTimeField(blank=True, null=True)),
                ('special_requests', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchases', to='tickets.ticket')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ticket_purchases', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TicketCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50, unique=True)),
                ('qr_code_data', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('used', 'Used'), ('expired', 'Expired'), ('cancelled', 'Cancelled')], default='active', max_length=20)),
                ('used_at', models.DateTimeField(blank=True, null=True)),
                ('used_by', models.CharField(blank=True, help_text='Staff member who validated the ticket', max_length=200)),
                ('is_transferable', models.BooleanField(default=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('purchase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ticket_codes', to='tickets.ticketpurchase')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TicketReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField(choices=[(1, '1 Star'), (2, '2 Stars'), (3, '3 Stars'), (4, '4 Stars'), (5, '5 Stars')])),
                ('title', models.CharField(blank=True, max_length=200)),
                ('comment', models.TextField()),
                ('is_verified', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('purchase', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='tickets.ticketpurchase')),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='tickets.ticket')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ticket_reviews', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='ticketpurchase',
            index=models.Index(fields=['user', 'status'], name='tickets_tic_user_id_e6c8ae_idx'),
        ),
        migrations.AddIndex(
            model_name='ticketpurchase',
            index=models.Index(fields=['ticket', 'status'], name='tickets_tic_ticket__411138_idx'),
        ),
        migrations.AddIndex(
            model_name='ticketpurchase',
            index=models.Index(fields=['payment_status'], name='tickets_tic_payment_92ca20_idx'),
        ),
        migrations.AddIndex(
            model_name='ticketpurchase',
            index=models.Index(fields=['created_at'], name='tickets_tic_created_3b721c_idx'),
        ),
        migrations.AddIndex(
            model_name='ticketcode',
            index=models.Index(fields=['code'], name='tickets_tic_code_dc9e85_idx'),
        ),
        migrations.AddIndex(
            model_name='ticketcode',
            index=models.Index(fields=['status'], name='tickets_tic_status_18711e_idx'),
        ),
        migrations.AddIndex(
            model_name='ticketcode',
            index=models.Index(fields=['purchase'], name='tickets_tic_purchas_9622f2_idx'),
        ),
        migrations.AddIndex(
            model_name='ticketreview',
            index=models.Index(fields=['ticket', 'is_active'], name='tickets_tic_ticket__45c369_idx'),
        ),
        migrations.AddIndex(
            model_name='ticketreview',
            index=models.Index(fields=['rating'], name='tickets_tic_rating_d018b3_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='ticketreview',
            unique_together={('ticket', 'user')},
        ),
        migrations.AddIndex(
            model_name='ticket',
            index=models.Index(fields=['category', 'status'], name='tickets_tic_categor_c85770_idx'),
        ),
        migrations.AddIndex(
            model_name='ticket',
            index=models.Index(fields=['event_date'], name='tickets_tic_event_d_155734_idx'),
        ),
        migrations.AddIndex(
            model_name='ticket',
            index=models.Index(fields=['price'], name='tickets_tic_price_bfc977_idx'),
        ),
        migrations.AddIndex(
            model_name='ticket',
            index=models.Index(fields=['is_featured'], name='tickets_tic_is_feat_41591a_idx'),
        ),
        migrations.AddIndex(
            model_name='ticket',
            index=models.Index(fields=['venue'], name='tickets_tic_venue_i_5fc9b3_idx'),
        ),
    ]
